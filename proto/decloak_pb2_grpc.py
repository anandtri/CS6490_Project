# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import decloak_pb2 as decloak__pb2


class FetchProxyStub(object):
  """Proxy service defs.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.fetchPage = channel.unary_stream(
        '/decloak.FetchProxy/fetchPage',
        request_serializer=decloak__pb2.FetchURL.SerializeToString,
        response_deserializer=decloak__pb2.WebPage.FromString,
        )


class FetchProxyServicer(object):
  """Proxy service defs.
  """

  def fetchPage(self, request, context):
    """Fetches requested page, following redirects. returns stream of
    found pages.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FetchProxyServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'fetchPage': grpc.unary_stream_rpc_method_handler(
          servicer.fetchPage,
          request_deserializer=decloak__pb2.FetchURL.FromString,
          response_serializer=decloak__pb2.WebPage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'decloak.FetchProxy', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
